<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
			"http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<HEAD>


<LINK REL="stylesheet" HREF="../../adcstyle.css" TYPE="text/css">
<LINK REL="stylesheet" HREF="../../style.css" TYPE="text/css">



<title>Greenwich Mean Time offsets and the Map control panel</title>
        


<meta name="keywords" content="Mac OS 8 Virtual Memory Management Unlockmemory lockmemory">
<meta name="Description" content="Technical Q&amp;A OPS24: Q&amp;A decsribes the effect of a call to 
LockMemory and UnlockMemory on a page of Virtual Memory.">


</HEAD>


<BODY BGCOLOR="#FFFFFF" TEXT="#000000"> 

<!-- white background -->




<!-- top_of_header_marker_comment -->
<!-- begin_header_information -->
<!--#include virtual="/qa/indexes/breadcrumb.inc" -->
<!--#include virtual="/adcnavbar" -->
<!-- end_header_information -->


<!-- bottom_of_header_marker_comment -->
<!-- top_of_titles_marker_comment -->
<CENTER><table width="600" cellpadding="0" cellspacing="0" border="0">
<tr><td>
<img src="images/ops24_title.jpg" alt="Technical Q&amp;A OPS24" width=312 height=46>
<br>
<img src="images/ops24_subtitle.jpg" alt="Greenwich Mean Time offsets and the Map control panel" width=569 height=32>
<br><br>
</td></tr></table></CENTER>
<!-- bottom_of_titles_marker_comment -->




			<!-- -->
			
			<!-- Document Body -->

<CENTER><table cellspacing="0" cellpadding="0" border="0" WIDTH="600">
<tr>
<td>

         <hr width=500 align=center>

         <P id=p2>
         Q: Is there a way to read Greenwich Mean Time offsets from
         the Map control panel?</P>
                  
         <P id=p4>
         A: There's actually a system-level call to find out where
         you are. It's a Script Manager call named
         <CODE>ReadLocation</CODE> (used
         by the Map control panel), which returns a structure giving
         you all the information you need. Here's a description of
         the call, copied from MPW 411:</P>
         
         <TABLE BORDER=0>
            <TR>
               <TD BGCOLOR="#EEEEE0">
                  <pre>pascal void ReadLocation(MachineLocation *loc)
  = {0x205F,0x203C,0x000C,0x00E4,0xA051};

File {CIncludes}script.h</pre>

                  <P>In C:</P>
                  
                  <pre>pascal void ReadLocation(MachineLocation *loc);
pascal void WriteLocation(const MachineLocation *loc);
                  </pre>
               </TD>
            </TR>
         </TABLE>
        
         
         <P id=p4>
         These routines access the stored geographic location and
         time zone information for the Macintosh from parameter RAM.
         For example, the time zone information can be used to derive
         the absolute time (GMT) that a document or mail message was
         created. With this information, when the document is
         received across time zones, the creation date and time are
         correct. Otherwise, documents can appear to be created after
         they're read. (For example, someone could create a message
         in Tokyo on Tuesday and send it to Cupertino, where it's
         received and read on Monday.) Geographic information can
         also be used by applications that require it.</P>
         
         <P id=p4>The <CODE>gmtDelta</CODE> field represents the current
         offset (in seconds) from Universal (Greenwich Mean) Time to the
         current time on the Macintosh. So, if the current Macintosh
         time is 1:00 AM and current GMT is 2:00 AM, then
         <CODE>gmtDelta</CODE> should be -3600, since the current time
         is one hour (3600 seconds) less than GMT. The
         <CODE>gmtDelta</CODE> field is a signed three-byte value.</P>
         
         <P id=p4>
         The high bit (bit 7) of the <CODE>dlsDelta</CODE> field
         represents the current state of daylight savings time. If
         daylight savings time is in effect, then bit 7 of
         <CODE>dlsDelta</CODE> is set; if daylight savings time is not
         in effect, then bit 7 is clear. The other 7 bits (bits 0
         through 6) of <CODE>dlsDelta</CODE> are reserved
         for future use by Apple. (This was defined for the release
         of AOCE; the daylight savings time checkbox in the System 7
         Pro Date &amp; Time control panel uses these semantics as do
         several other utilities.)</P>
         
         <P id=p4>
         The value in <code>gmtDelta</code> always represents current
         offset from GMT, regardless of the setting in
         <CODE>dlsDelta</CODE>; GMT can always be calculated by
         subtracting <code>gmtDelta</code> from the
         current time. That means that during daylight savings time,
         the value in <code>gmtDelta</code> will be different from the
         value during standard time.</P>
         
         <P id=p4>
         If the <CODE>MachineLocation</CODE> has never been set, it
         should be &lt;0,0,0&gt;. The top byte of the
         <code>gmtDelta</code> should be masked off and preserved when
         writing: it's reserved for future extension. The
         <code>gmtDelta</code> is in seconds east of GMT; for
         example, San Francisco is at minus 28,800 seconds (8 hours *
         3600 seconds per hour). The latitude and longitude are in
         fractions of a great circle, giving them accuracy to within
         less than a foot, which should be sufficient for most
         purposes. For example, <CODE>Fract</CODE> values of 
         1.0 = 90deg., -1.0 = -90deg., and -2.0 = -180deg.</P>
         <P id=p4>In C:</P>
         <TABLE BORDER=0>
            <TR>
               <TD BGCOLOR="#EEEEE0">
                  <pre>struct MachineLocation {
  Fract latitude;
  Fract longitude;
  union {
    char  dlsDelta;  /*signed byte; daylight savings delta*/
    long  gmtDelta;  /*must mask - see documentation*/
  }  gmtFlags;
};
                  </pre>
               </TD>
            </TR>
         </TABLE>
         
         
         <P id=p4>The <code>gmtDelta</code> is really a three-byte value, so
         you must take care to get and set it properly, as in the
         following C code examples:</P>
         
         <TABLE BORDER=0>
            <TR>
               <TD BGCOLOR="#EEEEE0">
                  <pre>long GetGmtDelta(MachineLocation myLocation)
{
  long  internalGMTDelta;
  internalGMTDelta = myLocation.gmtDelta &amp; 0x00ffffff;
    if ( (internalGMTDelta &gt;&gt; 23) &amp; 1 )  // need to sign extend
      internalGmtDelta = internalGmtDelta | 0xff000000;
    return(internalGmtDelta);
}

void SetGmtDelta(MachineLocation *myLocation, long myGmtDelta)
{
  char  tempSignedByte;
  tempSignedByte = myLocation-&gt;dlsDelta;
  myLocation-&gt;gmtDelta = myGmtDelta;
  myLocation-&gt;dlsDelta = tempSignedByte;
}
                  </pre>
               </TD>
            </TR>
         </TABLE>

<H4 ALIGN=center>Updated: 17-May-1999</H4>


</td>
</tr>
</table></CENTER>
<!-- begin_footer_information -->
<!--googleoff: index -->
<CENTER><TABLE BORDER=0 CELLPADDING=3 WIDTH=600><TR><TD>
<hr width=500 align=center>
<P ALIGN=center>
Technical Q&amp;As by
<A HREF="../indexes/dateindex.html">Date</A> |
<A HREF="../indexes/numberindex.html">Number</A> |
<A HREF="../index.html">Technology</A> |
<A HREF="../indexes/titleindex.html">Title</A> 
<BR> 
<A HREF="http://developer.apple.com/techpubs/">Developer Documentation</A> | 
<A HREF="../../technotes/index.html">Technical Notes</A> | 
<A HREF="http://developer.apple.com/sdk/">Development Kits</A> | 
<A HREF="http://developer.apple.com/samplecode/">Sample Code</A>

</P>
</TD></TR></TABLE></CENTER>
<!--googleon: index -->
<!--#include virtual="/footer" -->
<!-- end_footer_information -->


</BODY>
</HTML>
