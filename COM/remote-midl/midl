#!/bin/bash

#
#	$Id$
#
#	Execute midl on remote win32 machine
#
#	Neil Mayhew - 2007-11-19
#
# COM Support Library helper script
# Copyright (C) 2007 SIL International
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#
# http://www.gnu.org/licenses/lgpl.html
#

if [ $# -lt 2 ]; then
	echo Usage: $0 remote_host [-p remote_port] [midl args] /h foo.h input.idl
	exit 1
fi

REMOTE_HOST=$1
shift

if [ "$1" == "-p" ]; then
	REMOTE_PORT=$2
	shift 2
else
	REMOTE_PORT=22
fi

# Choose temporary directory on remote machine
DIR=$(ssh -p $REMOTE_PORT "$REMOTE_HOST" "mktemp -dt")
if [ -z "$DIR" ]
  then echo $(basename "$0"): Error choosing temporary directory on remote host.
  exit 1
fi
DIR_FROM_WIN_PERSPECTIVE=$(ssh -p $REMOTE_PORT "$REMOTE_HOST" cygpath -w "$DIR")

# Remove extra path information from the filename arguments since it won't be helpful on Windows
isSwitch()
{
	[ "$(dirname "$1")" = / ] # Unlikely to match a real filename
}
ARGS=()
FOLLOWS=
for ARG
do
	case "$FOLLOWS" in
	(/H)
		HFILE=$ARG
		ARG=$(basename "$ARG")
		;;
	(/TLB)
		TLBFILE=$ARG
		ARG=$(basename "$ARG")
		;;
	(/I|/ENV)
		# Pass this arg through unchanged
		;;
	(*)
		if ! isSwitch "$ARG"; then
			IDLFILE=$ARG
			ARG=$(basename "$ARG")
		fi
	esac
	ARGS+=("$ARG")
	FOLLOWS=${ARG^^} # Uppercase
done

CMD="cd $DIR_FROM_WIN_PERSPECTIVE && midl ${ARGS[@]}"

# Hack to avoid rewriting script in python to be more robust and happily handle commandline arguments:
# (eg could run: remote-midl.py --send ../input.idl --send ../fooDependency.tlb midl_arguments_here --get-back /foo/out.h --get-back ../output/out.tlb)
# If FwCellarTlb.idl, ViewsTlb.idl, or WorldPadTlb.idl are to be processed, then we need to send over FwKernelTlb.tlb
# There are probably other dependencies but they aren't necessarily used yet in the files in the IDLMakefile.
IDLNAME=$(basename "$IDLFILE")
IDLDIR=$(dirname "$IDLFILE")
FILES_TO_SEND_TO_REMOTE_HOST=("$IDLFILE")
if [ "$IDLNAME" = FwCellarTlb.idl ]; then
	FILES_TO_SEND_TO_REMOTE_HOST+=("$IDLDIR/FwKernelTlb.tlb")
fi
if [ "$IDLNAME" = ViewsTlb.idl ]; then
	FILES_TO_SEND_TO_REMOTE_HOST+=("$IDLDIR/FwKernelTlb.tlb")
fi
if [ "$IDLNAME" = DbAccessTlb.idl ]; then
	FILES_TO_SEND_TO_REMOTE_HOST+=("$IDLDIR/FwKernelTlb.tlb")
fi
if [ "$IDLNAME" = WorldPadTlb.idl ]; then
	FILES_TO_SEND_TO_REMOTE_HOST+=("$IDLDIR/FwKernelTlb.tlb" "$IDLDIR/ViewsTlb.tlb")
fi
if [ "$IDLNAME" = CmnFwDlgsTlb.idl ]; then
	FILES_TO_SEND_TO_REMOTE_HOST+=("$IDLDIR/FwKernelTlb.tlb" "$IDLDIR/ViewsTlb.tlb" "$IDLDIR/LanguageTlb.tlb")
fi

# cmd.exe /C seems to have trouble with double-quote handling and the spaces in
# running the vcvars32.bat path if you try to also do more things in one go. But
# that can be worked around by putting the vcvars32.bat path into another
# file with no spaces in the path, as done below.

VCVARSBAT="$DIR_FROM_WIN_PERSPECTIVE\\vcvars.bat"
VSVARSCMD="cmd /C echo \"C:\\Program Files\\Microsoft Visual Studio 9.0\\Common7\\Tools\\vsvars32.bat\" \> \"$VCVARSBAT\""
scp -P $REMOTE_PORT "${FILES_TO_SEND_TO_REMOTE_HOST[@]}" "$REMOTE_HOST:$DIR" &&
	ssh -p $REMOTE_PORT "$REMOTE_HOST" "$VSVARSCMD" &&
	ssh -p $REMOTE_PORT "$REMOTE_HOST" "cmd /C '$VCVARSBAT && $CMD'" &&
	[ -z "$HFILE" ] || scp -P $REMOTE_PORT "$REMOTE_HOST:$DIR/$(basename "$HFILE")" "$HFILE" &&
	[ -z "$TLBFILE" ] || scp -P $REMOTE_PORT "$REMOTE_HOST:$DIR/$(basename "$TLBFILE")" "$TLBFILE" &&
	ssh -p $REMOTE_PORT "$REMOTE_HOST" "rm -r $DIR" ||
	(echo $(basename "$0"): Error communicating with remote host.; exit 1)
